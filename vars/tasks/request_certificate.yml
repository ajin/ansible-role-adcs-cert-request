---
- name: Create OpenSSL configuration with SANs
  ansible.builtin.template:
    src: openssl_san.cfg.j2
    dest: openssl_san.cfg

- name: Generate CSR with SANs
  ansible.builtin.shell:
    cmd: openssl req -new -newkey rsa:2048 -nodes -keyout "{{ private_key_path }}" -out "{{ csr_path }}" -config openssl_san.cfg
    creates: "{{ csr_path }}"

- name: Read CSR content
  ansible.builtin.slurp:
    src: "{{ csr_path }}"
  register: csr_content

- name: URL encode CSR
  set_fact:
    encoded_csr: "{{ csr_content.content | b64decode | urlencode }}"

- name: Request certificate signing from AD CA
  ansible.builtin.uri:
    url: "{{ ca_server }}/certfnsh.asp"
    method: POST
    user: "{{ ad_username }}"
    password: "{{ ad_password }}"
    body: "Mode=newreq&CertRequest={{ encoded_csr }}&CertAttrib=CertificateTemplate:{{ certificate_template }}&TargetStoreFlags=0&SaveCert=yes"
    return_content: yes
    validate_certs: no
  register: result

- name: Save certificate or request ID
  block:
    - name: Save certificate
      ansible.builtin.copy:
        content: "{{ result.content }}"
        dest: "{{ certificate_path }}"
      when: "'-----BEGIN CERTIFICATE-----' in result.content"

    - name: Save request ID
      ansible.builtin.copy:
        content: "{{ (result.content | regex_search('ReqID=(\\d+)', '\\1')) | first }}"
        dest: "{{ request_id_path }}"
      when: "'ReqID=' in result.content"