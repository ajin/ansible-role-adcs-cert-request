---
- name: Check if certificate exists
  ansible.builtin.stat:
    path: "{{ certificate_path }}"
  register: certificate_file

# - name: Check certificate expiration date
#   ansible.builtin.shell:
#     cmd: openssl x509 -enddate -noout -in "{{ certificate_path }}"
#   register: certificate_enddate
#   when: certificate_file.stat.exists

# - debug:
#     msg: "{{ certificate_path }}"
#   when: certificate_enddate is defined and certificate_file.stat.exists

# - name: Calculate days until certificate expiration
#   set_fact:
#     days_until_expiration: "{{ ((certificate_enddate.stdout_lines[0].split('=')[1] | to_datetime('%b %d %H:%M:%S %Y %Z') - ansible_date_time.iso8601 | to_datetime('%Y-%m-%dT%H:%M:%S.%fZ')).total_seconds() // 86400 }}"
#   when: certificate_enddate is defined and certificate_file.stat.exists

# - name: Set renew_certificate flag if the certificate is expired, expires within specified days, or force_renewal is true
#   set_fact:
#     renew_certificate: true
#   when: days_until_expiration is not defined or days_until_expiration <= {{ days_remaining }} or force_renewal

# - name: Set renew_certificate flag to false if the certificate is valid for more than specified days and force_renewal is false
#   set_fact:
#     renew_certificate: false
#   when: days_until_expiration is defined and days_until_expiration > {{ days_remaining }} and not force_renewal


- name: Check if the certificate is expired or will expire within the specified days
  shell: |
    openssl x509 -checkend {{ (days_remaining|int * 86400)|int }} -noout -in {{ certificate_path }}
  register: cert_check_result
  ignore_errors: true
  when: certificate_file.stat.exists

- name: Set certificate_expired fact based on check result
  set_fact:
    certificate_expired: "{{ not certificate_file.stat.exists or cert_check_result.rc != 0 }}"